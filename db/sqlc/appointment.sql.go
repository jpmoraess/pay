// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: appointment.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createAppointment = `-- name: CreateAppointment :one
INSERT INTO appointments (id, user_id, client_name, service_id, appointment_time, status)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, user_id, client_name, service_id, appointment_time, status
`

type CreateAppointmentParams struct {
	ID              uuid.UUID `json:"id"`
	UserID          uuid.UUID `json:"user_id"`
	ClientName      string    `json:"client_name"`
	ServiceID       uuid.UUID `json:"service_id"`
	AppointmentTime time.Time `json:"appointment_time"`
	Status          string    `json:"status"`
}

func (q *Queries) CreateAppointment(ctx context.Context, arg CreateAppointmentParams) (Appointment, error) {
	row := q.db.QueryRow(ctx, createAppointment,
		arg.ID,
		arg.UserID,
		arg.ClientName,
		arg.ServiceID,
		arg.AppointmentTime,
		arg.Status,
	)
	var i Appointment
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.ClientName,
		&i.ServiceID,
		&i.AppointmentTime,
		&i.Status,
	)
	return i, err
}
