// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: schedule_override.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createScheduleOverride = `-- name: CreateScheduleOverride :one
INSERT INTO schedule_overrides (id, schedule_id, date, start_time, end_time, reason)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, schedule_id, date, start_time, end_time, reason
`

type CreateScheduleOverrideParams struct {
	ID         uuid.UUID   `json:"id"`
	ScheduleID uuid.UUID   `json:"schedule_id"`
	Date       time.Time   `json:"date"`
	StartTime  pgtype.Time `json:"start_time"`
	EndTime    pgtype.Time `json:"end_time"`
	Reason     pgtype.Text `json:"reason"`
}

func (q *Queries) CreateScheduleOverride(ctx context.Context, arg CreateScheduleOverrideParams) (ScheduleOverride, error) {
	row := q.db.QueryRow(ctx, createScheduleOverride,
		arg.ID,
		arg.ScheduleID,
		arg.Date,
		arg.StartTime,
		arg.EndTime,
		arg.Reason,
	)
	var i ScheduleOverride
	err := row.Scan(
		&i.ID,
		&i.ScheduleID,
		&i.Date,
		&i.StartTime,
		&i.EndTime,
		&i.Reason,
	)
	return i, err
}
