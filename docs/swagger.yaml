definitions:
  http.createPaymentRequest:
    properties:
      due_date:
        example: "2025-02-26"
        type: string
      value:
        example: 20.99
        type: number
    required:
    - due_date
    - value
    type: object
  http.createPaymentResponse:
    properties:
      id:
        type: string
      value:
        type: number
    type: object
  http.createServiceRequest:
    properties:
      description:
        example: This is a description
        type: string
      name:
        example: Haircut
        type: string
      price:
        example: 29.99
        type: number
    required:
    - description
    - name
    - price
    type: object
  http.createServiceResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  http.createUserRequest:
    properties:
      email:
        example: john@doe.com
        type: string
      full_name:
        example: John Doe
        maxLength: 50
        type: string
      password:
        example: "123456"
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  http.loginRequest:
    properties:
      email:
        example: john@doe.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  http.loginResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
    type: object
  http.registerTenantRequest:
    properties:
      email:
        example: john_doe@mail.com
        type: string
      full_name:
        example: John Doe Silva
        type: string
      name:
        example: John Doe Barber
        type: string
      password:
        example: secretPwd
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - full_name
    - name
    - password
    type: object
  http.registerTenantResponse:
    properties:
      id:
        type: string
    type: object
  http.renewAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  http.renewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
  http.userResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
    type: object
info:
  contact: {}
  description: PayGolang
  title: Pay
  version: 1.0.0
paths:
  /hello:
    get:
      consumes:
      - application/json
      description: Perform hello world
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Hello world
      tags:
      - hello
  /payments:
    post:
      consumes:
      - application/json
      description: Perform payment creation
      parameters:
      - description: Payment request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createPaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.createPaymentResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create payment
      tags:
      - payments
  /services:
    post:
      consumes:
      - application/json
      description: Perform service creation
      parameters:
      - description: Service request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createServiceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.createServiceResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create service
      tags:
      - services
  /tenants:
    post:
      consumes:
      - application/json
      description: Perform tenant registration
      parameters:
      - description: register request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.registerTenantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.registerTenantResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register tenant
      tags:
      - tenants
  /tokens/renew:
    post:
      consumes:
      - application/json
      description: Perform access token renew
      parameters:
      - description: Token renew request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.renewAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.renewAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Renew access token
      tags:
      - tokens
  /users:
    post:
      consumes:
      - application/json
      description: Perform user creation
      parameters:
      - description: create request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.userResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Perform user login
      parameters:
      - description: Login request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.loginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Enter "Bearer {your_token}" in the field below (without quotes)
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
